name: Publish new Package

# workflow dispatch requires a maintainer to go to the Actions tab and manually trigger the workflow
on:
  workflow_dispatch:
    inputs:
      publish:
        description: "Flag to publish new package"
        required: true
        default: false
        type: boolean

# If we ever migrate this to not be manual, we HAVE to check that the commit
# it is running against DOES NOT contain [skip-ci] in the commit message
jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.artifact.outputs.e2e }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ALCHEMY_BOT_PAT }}

      - name: Set Github User Details
        run: |
          git config --global user.name "Alchemy Bot"
          git config --global user.email "alchemy-bot@alchemy.com"

      - name: Set NPM Permissions
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: "16.20"
          cache: "yarn"

      - name: Install dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: E2E tests
        id: e2e
        env:
          API_KEY: ${{ secrets.API_KEY }}
          OWNER_MNEMONIC: ${{ secrets.OWNER_MNEMONIC }}
          PAYMASTER_POLICY_ID: ${{ secrets.PAYMASTER_POLICY_ID }}
        run: yarn test:e2e

      - name: Artifact of E2E tests
        id: artifact
        if: steps.e2e.outcome == 'success'
        run: echo "e2e=true" >> "$GITHUB_OUTPUT"

  # Lerna publish will, compute the new version, update files, run precommit hooks, tag, publish, and push change log
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_test
    if: inputs.publish && (needs.build_and_test.outputs.artifact == "true")
    steps:
      - name: Publish using Lerna
        # run: yarn lerna publish --no-private --yes --no-verify-access
        run: echo "${{ inputs.publish }} ${{ needs.build_and_test.outputs.artifact }}"
