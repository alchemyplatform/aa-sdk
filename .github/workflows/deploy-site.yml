name: Deploy Vocs site to Pages
on:
  push:
    branches:
      - main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      docs: ${{ steps.filter.outputs.docs }}
      code: ${{ steps.filter.outputs.code }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled
          
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            docs:
              - 'site/**'
              - '.github/workflows/deploy-site.yml'
            code:
              - 'packages/**'
  # Build job
  build:
    needs: changes
    runs-on: ubuntu-latest
    name: Build
    if: ${{ needs.changes.outputs.docs == 'true' && needs.changes.outputs.code == 'false' }}
    env:
      NO_BASE_PATH: ${{ inputs.no_base_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: yarn

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Install dependencies
        run: yarn

      - name: Build with Vocs
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 5
          max_attempts: 2
          retry_on: error
          command: yarn build

      - name: Create .nojekyll
        run: touch site/dist/.nojekyll

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: site/dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    if: ${{ needs.changes.outputs.docs == 'true' && needs.changes.outputs.code == 'false' }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
