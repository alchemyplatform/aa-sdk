{
  "$schema": "https://typedoc.org/schema.json",

  // ============================================================================
  // INPUT CONFIGURATION
  // Defines what TypeScript files and modules to process
  // ============================================================================
  "entryPoints": [
    "aa-sdk/core/src/index.ts",
    "aa-sdk/ethers/src/index.ts",
    "account-kit/infra/src/exports/index.ts",
    "account-kit/signer/src/index.ts",
    "account-kit/wallet-client/src/exports/index.ts",
    "account-kit/core/src/index.ts",
    "account-kit/react/src/index.ts",
    "account-kit/react-native/src/index.ts",
    "account-kit/smart-contracts/src/index.ts",
    "account-kit/rn-signer/src/index.tsx"
  ],
  "entryPointStrategy": "expand",
  "tsconfig": "./tsconfig.typedoc.json",
  "exclude": [
    "**/*.test.ts",
    "**/*.test.tsx",
    "**/*.test-d.ts",
    "**/*.e2e.test.ts",
    "**/__tests__/**/*",
    "**/e2e-tests/**/*",
    "**/vitest.config.ts",
    "**/vitest.config.e2e.ts",
    "**/*.stories.ts",
    "**/*.stories.tsx",
    ".vitest/**/*"
  ],

  // ============================================================================
  // OUTPUT CONFIGURATION
  // Controls where and how documentation files are generated
  // ============================================================================
  "out": "./docs/pages/reference",
  "cleanOutputDir": true,
  "fileExtension": ".mdx",

  // ============================================================================
  // PLUGIN CONFIGURATION
  // TypeDoc plugins and their settings for markdown generation
  // ============================================================================
  "plugin": [
    "typedoc-plugin-markdown",
    "typedoc-plugin-frontmatter",
    "typedoc-plugin-remark",
    "./custom-frontmatter.mjs"
  ],
  "remarkPlugins": ["remark-mdx"],

  // ============================================================================
  // FRONTMATTER CONFIGURATION
  // Settings for MDX frontmatter generation
  // ============================================================================
  "frontmatterGlobals": {
    "layout": "reference"
  },
  "frontmatterCommentTags": ["description"],
  "frontmatterNamingConvention": "camelCase",

  // ============================================================================
  // TYPESCRIPT COMPILER CONFIGURATION
  // TypeScript-specific settings for documentation generation
  // ============================================================================
  "skipErrorChecking": true,
  "compilerOptions": {
    "skipLibCheck": true
  },

  // ============================================================================
  // CONTENT FORMATTING
  // Controls how code and content is formatted in the output
  // ============================================================================
  "useHTMLEncodedBrackets": true,
  "useCodeBlocks": true,
  "sanitizeComments": true,
  "typePrintWidth": 80,
  "expandObjects": false,
  "expandParameters": false,

  // ============================================================================
  // PAGE LAYOUT & NAVIGATION
  // Controls page structure, headers, and navigation elements
  // ============================================================================
  "hideBreadcrumbs": true,
  "hidePageHeader": true,
  "hidePageTitle": true,
  "blockTagsPreserveOrder": ["@example", "@deprecated", "@remarks"],
  "strikeDeprecatedPageTitles": true,
  "pageTitleTemplates": {
    "index": "{projectName} API Reference",
    "member": "{name}",
    "module": "{name}"
  },

  // ============================================================================
  // TABLE FORMATTING
  // Controls how parameters, properties, and other data are displayed in tables
  // ============================================================================
  "parametersFormat": "table",
  "interfacePropertiesFormat": "table",
  "classPropertiesFormat": "table",
  "typeAliasPropertiesFormat": "table",
  "enumMembersFormat": "table",
  "propertyMembersFormat": "table",
  "typeDeclarationFormat": "table",
  "indexFormat": "table",
  "tableColumnSettings": {
    "leftAlignHeaders": true
  }
}
